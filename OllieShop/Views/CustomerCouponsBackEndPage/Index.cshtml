@model IEnumerable<OllieShop.Models.CustomerCoupons>

@{
    ViewData["Title"] = "折價券總覽";
    Layout = "~/Views/Shared/_Layout_Customer.cshtml";
}

<div class="d-flex align-items-center">
    <h1 class="me-auto">@ViewData["Title"]</h1>
    <a asp-action="OptionsMenu" asp-controller="CustomersBackEndPage">返回消費者功能選單</a>
</div>
<p>
    <a asp-action="Create" asp-route-CRID="@ViewBag.CRID">新增折價券</a>
</p>

@if(Model.Count() == 0)
{
    <h2 class="text-primary">目前您尚未持有折價券，可多多關注賣場活動訊息</h2>
    return;
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CN.CODE)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CN.Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CN.ExpiryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AppliedDate)
            </th>


        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CN.CODE)
            </td>
            @{
                decimal discountPercentage = (decimal)((1 - @item.CN.Discount) * 100);
                string discountPercentageRemainIntPart = discountPercentage.ToString("0");
            }
            <td>
                @Html.DisplayFor(modelItem => discountPercentageRemainIntPart)%減免
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CN.ExpiryDate)
            </td>
            <td>
                @(item.AppliedDate != null ? @Html.DisplayFor(modelItem => item.AppliedDate) : Html.Raw("<span class='text-primary'>尚未使用</span>"))
            </td>
        </tr>
}
    </tbody>
</table>

