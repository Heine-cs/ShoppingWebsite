@model List<OllieShop.ViewModels.VMGenerateOrdersByCartData>
@{
    ViewData["Title"] = "商品運送與付款確認";
    Layout = "~/Views/Shared/_Layout_Customer.cshtml";
}
<style>
    #ProductInfoColumn {
        width: 200px;
    }

    .table{
        table-layout: fixed;
    }
</style>

<h1>@ViewData["Title"]</h1>

<table class="table align-middle">
    <thead class="table-light">
        <tr>
            <th>商品</th>
            <th>付款方式</th>
            <th>運送方式</th>
        </tr>
    </thead>
    <tbody>
        <form asp-action="processOrders">
            @foreach (var singleProductInfo in Model)
            {
            <tr>
                <td id="ProductInfoColumn" class="border-end">
                    <span class="h3">@singleProductInfo.products.Name</span>
                    <img class="w-100 h-100" src="@singleProductInfo.specifications.Picture" />
                </td>
                <td class="border-end">
                    <div class="sellerPaymentOptionsList">
                        @Html.DropDownListFor(model => singleProductInfo.sellerPaymentMethodOptions, singleProductInfo.sellerPaymentMethodOptions,"選擇付款方式", new { @class = "form-control" })
                    </div>
                    <div class="customerPaymentCardOptionsList d-none">
                        <label>信用卡卡號</label>
                        @Html.DropDownListFor(model => singleProductInfo.customerPaymentCardOptions, singleProductInfo.customerPaymentCardOptions,"選擇您所要用來支付的信用卡卡號", new { @class = "form-control" })
                    </div>
                </td>
                <td>
                    @Html.DropDownListFor(model => singleProductInfo.sellerShipViaOptions, singleProductInfo.sellerShipViaOptions,"選擇運送方式", new { @class = "form-control" })
                </td>
            
            </tr>
            }
        </form>
    </tbody>
</table>
<div class="form-group my-3">
    <input type="submit" value="完成訂單" class="btn btn-primary btn-lg" />
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const customerPaymentCardOptions = $(".customerPaymentCardOptionsList .form-control");

        for(i=0; i < customerPaymentCardOptions.length;i++){
            console.log(customerPaymentCardOptions[i].childNodes);
            if(customerPaymentCardOptions[i].childNodes.length == 2){
                customerPaymentCardOptions[i].parentNode.classList.add("d-none");
            }
        }

        $(document).ready(function () {
            $('.sellerPaymentOptionsList .form-control').change(function () {
                var customerPaymentCardOptionsList = $(this).parent().next();
                if ($(this).val() === 'PM02') {
                    customerPaymentCardOptionsList.removeClass("d-none");
                    return "";
                }
                //選中後刷卡選項後又改回其他，就需要隱藏並清空
                customerPaymentCardOptionsList.addClass("d-none");
                customerPaymentCardOptionsList.children().eq(1).val("");

            });
        });


    </script>
}