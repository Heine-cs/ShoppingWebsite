@model OllieShop.Models.Orders

@{
    ViewData["Title"] = "商品結帳確認";
    Layout = "~/Views/Shared/_Layout_Customer.cshtml";
}
<style>
    .table {
        table-layout: fixed;
    }

    .table tbody tr{
       height:150px;
    }
</style>
<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-8">
        @Html.Raw(@ViewData["CartTableWithChildNode"])
    </div>

    <div class="col-md-4">
        <div>
            <a asp-action="Index">我還想逛逛，先不結帳</a>
        </div>
        <h2>訂單商品總金額 : <span class="text-primary">NT$<span id="ProductFeeCount">@ViewData["ProductFeeCount"]</span></span>(未折抵前)</h2>
        <h3>運費 : <span class="text-primary">NT$<span id="DeliveryFeeCount">@ViewData["DeliveryFeeCount"]</span></span></h3>
        <form asp-action="GenerateOrdersBaseOnDifferentProducts">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group d-none">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" value='@ViewData["OrderEstablishDate"]'/>
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group d-none">
                <label asp-for="CRID" class="control-label"></label>
                <input asp-for="CRID" class ="form-control" value='@ViewData["CRID"]' />
            </div>
            <div class="form-group">
                <label asp-for="ASID" class="control-label">地址欄</label>
                <select asp-for="ASID" class="form-control" asp-items="ViewBag.CustomerAddresses"></select>
            </div>
            <hr>
            <h5>訂單折價券選用</h5>
            @if (ViewData["CustomerUseableCouponsNotFound"].ToString() == "")
            {
                <div id="CustomerCouponRadioButton">
                    <div class="d-flex">
                        <span class="me-3">使用折價券 :</span>@Html.RadioButton("CustomerCoupon","true")
                    </div>
                    <div class="d-flex">
                        <span class="me-3">不使用折價券 :</span>@Html.RadioButton("CustomerCoupon","false")
                    </div>
                </div>
                
                <div class="form-group CouponInputBlock d-none">
                    <label asp-for="CNID" class="control-label">折價券代碼</label>
                    <select asp-for="CNID" class="form-control" asp-items="ViewBag.CustomerUseableCoupons">
                        <option value="">請選擇折價券</option>
                    </select>
                    <h3 class="mt-2 d-none text-end">套用折價後商品總金額 :<span class="text-secondary"></span>(不包含運費)</h3>
                </div>
            }
            else
            {
                <div class="fontBorder text-warning fs-4">@ViewData["CustomerUseableCouponsNotFound"]</div>
            }
            @*要將購物車內商品二維陣列拋到GenerateOrdersBaseOnDifferentProducts Action*@
            <input type="hidden" name="cartData" id="cartData">
            <div class="form-group my-3  text-end">
                <input type="submit" value="確認結帳，選擇付款與運送方式" class="btn btn-primary btn-lg" />
            </div>
        </form>
    </div>
</div>
@*折扣比率取出後放到隱藏div中data屬性*@
@foreach (var discount in ViewData["CustomerCouponDiscount"] as List<double>)
{
    <div class="coupon-item" data-discount="@discount"></div>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        //要將購物車內商品二維陣列拋到GenerateOrdersBaseOnDifferentProducts Action
        $('#cartData').val(localStorage.getItem("cartData"));

        $('#CustomerCouponRadioButton').on("click","input[type='radio']",function(event){
            if ($(this).val() === "true") {
                $('.CouponInputBlock').removeClass("d-none");
            }
            else{
                $('.CouponInputBlock').removeClass("d-none");
                $('.CouponInputBlock').addClass("d-none");
                $('select[name="CNID"]').val("");
                //不顯示:折價後金額套用折價後訂單總金額 :NT$xx的訊息
                $('.CouponInputBlock h3').removeClass("d-none");
                $('.CouponInputBlock h3').addClass("d-none");
            }
        });

        //下拉式選單切換折價券選項時對應計算折扣後總金額並顯示在畫面中
        $('#CNID').on('change',function(){
            getProductTotalPriceWhileUsingCoupon();
        });
        function getProductTotalPriceWhileUsingCoupon() 
            {
                //切換到某個選項時取出選項索引值
                let selectedOptionIndex = $('#CNID').prop('selectedIndex');
                //索引值 - 1在class為coupon-item找出折價比率
                let selectedCouponDiscount = $('.coupon-item').eq(selectedOptionIndex - 1).data('discount');
                //計算折價後金額
                //取出訂單總金額
                let ProductFeeCount = parseInt($('#ProductFeeCount').text(), 10);
                //折價後金額 = 訂單總金額 * 折扣比率
                let discountPrice = Math.round(ProductFeeCount * selectedCouponDiscount);
                //將折價後金額寫入畫面
                $('.CouponInputBlock h3>span').text('NT$' + discountPrice);

                //切換"請選擇折價券"選項時不顯示:折價後金額套用折價後訂單總金額 :NT$xx的訊息
                $('.CouponInputBlock h3').removeClass("d-none");
                $('.CouponInputBlock h3').addClass("d-none");
                if (selectedOptionIndex != 0) {
                    $('.CouponInputBlock h3').removeClass("d-none");
                }
            }

        function removeSpecifyCartProduct(CartItemIndexValue) {
            // 取得當前存在 localStorage 的商品資料
            let cartData = localStorage.getItem('cartData');
            let newCartData = [];

            //從localStorage取出序列化後的2D ARRAY先轉回Javascript的陣列放入 newCartData 陣列儲存
            newCartData = JSON.parse(cartData);
            //將特定索引值位址的元素移除
            newCartData[0].splice(CartItemIndexValue, 1);
            newCartData[1].splice(CartItemIndexValue, 1);
            newCartData[2].splice(CartItemIndexValue, 1);
            if (newCartData[0][0] === undefined) {
                localStorage.removeItem("cartData");
            }
            else {
                    //刪除商品後將剩餘商品資料存到 localStorage
                    localStorage.setItem('cartData', JSON.stringify(newCartData));
                    //重新計算訂單商品總金額與運費
                    $.ajax({
                        url: '@Url.Action("getCartInfo","Home")',
                        type: "POST",
                        data: JSON.stringify(newCartData),
                        contentType: 'application/json',
                        success: function (response) {
                            let ProductInfo = JSON.parse(response);
                            let ProductFeeCount = 0;
                            let DeliveryFeeCount = 0;
                            for (let singleProductInfo of ProductInfo) {
                                //加總所有產品小計
                                ProductFeeCount += (singleProductInfo.UnitPrice * singleProductInfo.RequireQuantities)
                                //加總所有產品運費
                                DeliveryFeeCount += singleProductInfo.DeliveryFee
                                }
                            $('#ProductFeeCount').text(ProductFeeCount);
                            $('#DeliveryFeeCount').text(DeliveryFeeCount);
                            getProductTotalPriceWhileUsingCoupon();
                        $('#cartData').val(localStorage.getItem("cartData"));
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("some error");
                        }
                    });
            }
            $('.col-8').empty();
            getCartItems();
            
        }


        function getCartItems() {
            let cartData = localStorage.getItem('cartData');
            if (cartData == null) {
                alert('已無任何商品供結帳，將回到首頁')
                    window.location.href = '@Url.Action("Index","Home")';
                return "";
            }

            $.ajax({
                url: '@Url.Action("getCartInfo","Home")',
                type: "POST",
                data: cartData,
                contentType: 'application/json',
                success: function (response) {
                    ProductInfo = JSON.parse(response);
                    let CartTable = `
                                    <table class="w-100 text-center table table-borderless table-striped table-hover fs-3 align-middle" id="CartTable">
                                        <thead>
                                            <tr>
                                                <th>圖片</th>
                                                <th>品名</th>
                                                <th>售價</th>
                                                <th>數量</th>
                                                <th>小計</th>
                                                <th colspan="2">贈品</th>
                                                <th>取消</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>`;
                    $('.col-8').html(CartTable);
                    let ProductFeeCount = 0;
                    let CartItemIndexValue = 0;
                    for (let singleProductInfo of ProductInfo) {
                        bodyRow = `
                                <tr class="border border-bottom-0 table-dark table-hover">
                                    <td><img class="w-100 h-100 object-fit-fill" src="${singleProductInfo.Picture}" /></td>
                                    <td>${singleProductInfo.SpecName}</td>
                                    <td>NT$${singleProductInfo.UnitPrice}</td>
                                    <td>${singleProductInfo.RequireQuantities}</td>
                                    <td>NT$${singleProductInfo.UnitPrice * singleProductInfo.RequireQuantities}</td>
                                    <td colspan="2">${singleProductInfo.Freebie}</td>
                                    <td><i class="bi bi-x-circle-fill" data-CartItemIndexValue="${CartItemIndexValue}" onclick="removeSpecifyCartProduct(${CartItemIndexValue})"></i></td>
                                </tr>
                                `
                        CartItemIndexValue++;
                        $('.col-8>table>tbody').append(bodyRow);
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("some error");
                }
            });
        }
    </script>
}
